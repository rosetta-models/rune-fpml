version: "1.0"
stages:
  - build
  - finalise
steps:
  main_clone:
    stage: 'build'
    title: Cloning main repository...
    type: git-clone
    git: rosetta-models
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_REVISION}}"

  BuildProperties:
    title: Setup shared build properties
    image: alpine
    commands:
      - echo "${{ARTIFACT_REGISTRY_SA_KEY}}"|base64 -d>"${{CF_VOLUME_PATH}}"/sa
      - cf_export GOOGLE_APPLICATION_CREDENTIALS="${{CF_VOLUME_PATH}}"/sa
      - cf_export GPG_IMPORT_COMMAND="cat <(echo -e '${{GPG_PRIVATE_KEY}}') | gpg --batch --import" --mask

  TagReleaseName:
    stage: 'build'
    title: Setup RELEASE_NAME variable with tag
    image: alpine/git
    when:
      condition:
        all:
          releaseNameNotDefined: "${{TAG_REPO}} == true"
    commands:
      - cf_export RELEASE_NAME=${{TAG_NAME}}

  BranchReleaseName:
    stage: 'build'
    title: Setup RELEASE_NAME variable with branch name
    image: alpine/git
    when:
      condition:
        all:
          releaseNameNotDefined: "${{TAG_REPO}} == false"
    commands:
      - cf_export RELEASE_NAME=${{GLOBAL_RELEASE_VERSION}}.${{CF_BRANCH_TAG_NORMALIZED}}-SNAPSHOT

  ReleaseProperties:
    title: Setup release build
    image: alpine/git
    when:
      condition:
        all:
          releaseNameNotDefined: "${{TAG_REPO}} == true"
    commands:
      - cf_export MVN_SET_VERSION="versions:set -DnewVersion=${{RELEASE_NAME}}"

  BranchProperties:
    title: Setup branch build
    image: alpine/git
    when:
      condition:
        all:
          releaseNameNotDefined: "${{TAG_REPO}} == false"
    commands:
      - cf_export MVN_SET_VERSION="versions:set -DnewVersion=${{RELEASE_NAME}}"

  Build:
    stage: 'build'
    title: Maven build
    no_cache: true
    no_cf_cache: true
    image: maven:3.9.9-eclipse-temurin-21-alpine
    working_directory: ./
    commands:
      - mvn ${{MVN_SET_VERSION}}
      - bash -c "${{GPG_IMPORT_COMMAND}}"
      - export CI_DEPLOY_USERNAME="${{CI_DEPLOY_USERNAME}}"
      - export CI_DEPLOY_PASSWORD="${{CI_DEPLOY_PASSWORD}}"
      - export GPG_KEYNAME="${{GPG_KEYNAME}}"
      - export GPG_PASSPHRASE="${{GPG_PASSPHRASE}}"
      - mvn -s settings.xml -U -B ${{MVN_CLI_OPT}} install org.sonatype.central:central-publishing-maven-plugin:0.7.0:publish -P release

  TagRepo:
    stage: 'finalise'
    title: Tag git repo with release name
    image: alpine/git
    when:
      condition:
        all:
          buildPassed: steps.Build.result == 'success'
          isRelease: "${{TAG_REPO}}"
    commands:
      - echo This is a release build, tag repos with release name [${{TAG_NAME}}]
      - git fetch --prune https://${{ROSETTA_MODELS_USER}}:${{ROSETTA_MODELS_PWD}}@github.com/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}.git "+refs/tags/*:refs/tags/*"
      - git tag ${{TAG_NAME}}
      - git push https://${{ROSETTA_MODELS_USER}}:${{ROSETTA_MODELS_PWD}}@github.com/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}.git ${{TAG_NAME}}
